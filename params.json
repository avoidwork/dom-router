{"name":"dom-router","tagline":"URL hash to DOM router","body":"Imagine you didn't have to write a bunch of JavaScript to get a slick, progressively enhanced interface! `dom-router`\r\nis a URL hash to DOM router which automatically, & intelligently toggles visibility of `Elements` based on `hashchange`\r\nevents.\r\n\r\nThis provides a clean separation of concerns, and progressive enhancement in a simple library. You can write clean HTML,\r\nand `dom-router` will progressively enhance the interface with CSS classes (not supplied). DOM updates happen on an\r\nanimation frame to minimize impacting your application. An optional `callback` allows you to handle application\r\nstate changes the way you want.\r\n\r\n## Example\r\n#### Before routing is enabled\r\n```html\r\n<nav>\r\n  <ul>\r\n    <li><a href=\"#main\">Main</a></li>\r\n    <li><a href=\"#settings/billing\" class=\"settings\">Billing</a></li>\r\n    <li><a href=\"#settings/password\" class=\"settings\">Password</a></li>\r\n    <li><a href=\"#settings/avatar\" class=\"settings\">Avatar</a></li>\r\n  </ul>\r\n</nav>\r\n...\r\n<article>\r\n  <section id=\"main\">...</section>\r\n  <section id=\"settings\">\r\n    <section id=\"billing\">...</section>\r\n    <section id=\"password\">...</section>\r\n    <section id=\"avatar\">...</section>\r\n  </section>\r\n</article>\r\n```\r\n\r\n#### After routing is enabled\r\nThis would be the result if a user visited `#settings/billing`:\r\n\r\n```html\r\n<nav>\r\n  <ul>\r\n    <li><a href=\"#main\">Main</a></li>\r\n    <li><a href=\"#settings/billing\" class=\"settings current\">Billing</a></li>\r\n    <li><a href=\"#settings/password\" class=\"settings\">Password</a></li>\r\n    <li><a href=\"#settings/avatar\" class=\"settings\">Avatar</a></li>\r\n  </ul>\r\n</nav>\r\n...\r\n<article>\r\n  <section id=\"main\" class=\"hidden\">...</section>\r\n  <section id=\"settings\">\r\n    <section id=\"billing\">...</section>\r\n    <section id=\"password\" class=\"hidden\">...</section>\r\n    <section id=\"avatar\" class=\"hidden\">...</section>\r\n  </section>\r\n</article>\r\n```\r\n\r\n#### Minimal coding required\r\n```javascript\r\nvar router = require('dom-router'),\r\n    r;\r\n\r\n// Router will write to console on `hashchange`\r\nr = router({callback: function (arg) {\r\n    console.log(arg.element.id, \"is visible\");\r\n}});\r\n```\r\n\r\n## How can I load dom-router?\r\ndom-router can be installed from npm, & bower, and supports CJS, AMD, & script tags.\r\nWhen loaded with a script tag, `window.router` will be created.\r\n\r\n## Configuration\r\n#### active\r\n`Boolean` which enables/disables routing\r\n\r\n#### callback\r\nFunction to execute after route has changed, takes `arg` which describes the event\r\n\r\n#### css\r\n`Object` with `current`, & `hidden` keys which have corresponding CSS class values, defaults to \"current\", & \"hidden\"\r\n\r\n#### ctx\r\nContext for DOM selector, defaults to `body` if not specified\r\n\r\n#### default\r\n[Optional] The default route to display if one is not specified, or an invalid route is specified\r\n\r\n#### delimiter\r\nMulti-tier routing delimiter, defaults to `/`, e.g. `#settings/billing`; each tier should map to a nested `id`\r\n\r\n#### log\r\n`Boolean` which logs routing to `router.history[]` if `true`, defaults to `false`; could be a memory leak if logging is enabled and target `Elements` are removed from DOM\r\n\r\n## API\r\n#### current()\r\nReturns the current `Route`, if logging is enabled\r\n\r\n#### hashchange(ev)\r\nEvent handler, expects `{oldURL: \"\", newURL: \"\"}`\r\n\r\n#### select(query)\r\nContext specific DOM selector\r\n\r\n\r\n## Requirements\r\n- `Element.classList` API, or shim\r\n\r\n## License\r\nCopyright (c) 2014 Jason Mulligan\r\nLicensed under the BSD-3 license\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}